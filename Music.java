/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafor2023;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Imtiaz Adar
 */
public class Music extends javax.swing.JFrame {

    /**
     * Creates new form Music
     */
    public Music() throws UnsupportedAudioFileException, IOException, LineUnavailableException {
        initComponents();
        playButton.setBackground(Color.WHITE);
        stopButton.setBackground(Color.WHITE);
        muteButton.setBackground(Color.WHITE);
        loopButton.setBackground(Color.WHITE);
        jSlider1.setBackground(new Color(255, 51, 51));
        jSlider1.setBorder(BorderFactory.createLineBorder(new Color(255, 51, 51), 2));
        back = new ImageIcon(getClass().getResource("music.png"));
        this.setIconImage(back.getImage());
        jPanel1.setBackground(new Color(255, 51, 51));
        //this.setBackground(back);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        loopButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        muteButton = new javax.swing.JButton();
        songTitleLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openmenuitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MUSIC PLAYER APP BY IMTIAZ ADAR");
        setResizable(false);

        jPanel1.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(null);

        jSlider1.setMaximum(6);
        jSlider1.setMinimum(-40);
        jSlider1.setToolTipText("");
        jSlider1.setValue(-17);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jPanel1.add(jSlider1);
        jSlider1.setBounds(20, 140, 380, 20);

        loopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javafor2023/looppp.png"))); // NOI18N
        loopButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        loopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopButtonActionPerformed(evt);
            }
        });
        jPanel1.add(loopButton);
        loopButton.setBounds(70, 210, 69, 69);

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javafor2023/playy.png"))); // NOI18N
        playButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        playButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playButton.setName("playButton"); // NOI18N
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        jPanel1.add(playButton);
        playButton.setBounds(140, 210, 69, 69);

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javafor2023/stopp.png"))); // NOI18N
        stopButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        stopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stopButton.setName("stopButton"); // NOI18N
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        jPanel1.add(stopButton);
        stopButton.setBounds(210, 210, 69, 69);

        muteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javafor2023/volume up.png"))); // NOI18N
        muteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        muteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        muteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(muteButton);
        muteButton.setBounds(280, 210, 69, 69);

        songTitleLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        songTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        songTitleLabel.setName("songTitleLabel"); // NOI18N
        jPanel1.add(songTitleLabel);
        songTitleLabel.setBounds(20, 30, 380, 81);

        jMenu1.setBackground(new java.awt.Color(20, 20, 20));
        jMenu1.setText("FILE");
        jMenu1.setName("filemenubar"); // NOI18N
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        openmenuitem.setText("OPEN");
        openmenuitem.setName("openmenubaritem"); // NOI18N
        openmenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openmenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(openmenuitem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void openmenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openmenuitemActionPerformed
       JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("wav files only", "wav");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File file1 = new File(chooser.getSelectedFile().getAbsolutePath());
            filepath = file1.getAbsolutePath();
            int ind = filepath.lastIndexOf("\\");
            String songname = filepath.substring(ind + 1, filepath.length());
            songTitleLabel.setText(songname);
        }
        try {
            audio = AudioSystem.getAudioInputStream(new File(filepath));
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            clip = AudioSystem.getClip();
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            clip.open(audio);
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        fc = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
        fc.setValue(currentValue);
    }//GEN-LAST:event_openmenuitemActionPerformed

    private void muteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muteButtonActionPerformed
        if(!mute){
            previousValue = currentValue;
            currentValue = -80;
            fc.setValue(currentValue);
            jSlider1.setValue(currentValue);
            muteButton.setIcon(mutee);
            mute = true;
        }
        else if(mute){
            currentValue = previousValue;
            fc.setValue(currentValue);
            jSlider1.setValue(currentValue);
            muteButton.setIcon(volup);
            mute = false;
        }
    }//GEN-LAST:event_muteButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        clip.stop();
        clip.setMicrosecondPosition(0);
        //playButton.setText("PLAY");
        playButton.setIcon(play1);
        songTitleLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if(!clip.isRunning()){
            clip.start();
            //playButton.setText("PAUSE");
            playButton.setIcon(pause1);
            songTitleLabel.setForeground(Color.YELLOW);
        }
        else if(clip.isRunning()){
            clip.stop();
            // playButton.setText("PLAY");
            playButton.setIcon(play1);
            songTitleLabel.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void loopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopButtonActionPerformed
        clip.loop(Clip.LOOP_CONTINUOUSLY);
    }//GEN-LAST:event_loopButtonActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        currentValue = jSlider1.getValue();
        if(currentValue < -40){
            currentValue = -80;
        }
        fc.setValue(currentValue);
    }//GEN-LAST:event_jSlider1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Music().setVisible(true);
                } catch (UnsupportedAudioFileException ex) {
                    Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
                } catch (LineUnavailableException ex) {
                    Logger.getLogger(Music.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton loopButton;
    private javax.swing.JButton muteButton;
    private javax.swing.JMenuItem openmenuitem;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel songTitleLabel;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
    Clip clip;
    AudioInputStream audio;
    boolean running = false, mute = false;
    int currentValue = -17, previousValue;
    FloatControl fc;
    String filepath = null;
    public ImageIcon play1 = new ImageIcon(getClass().getResource("playy.png"));
    public ImageIcon pause1 = new ImageIcon(getClass().getResource("pauses.png"));
    public ImageIcon volup = new ImageIcon(getClass().getResource("volume up.png"));
    public ImageIcon mutee = new ImageIcon(getClass().getResource("mutee.png"));
    public ImageIcon back;

    private void setBackground(ImageIcon back) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
}
